name: build
on:
  push:
    branches:
      - master
  pull_request:
env:
  CI: true

jobs:
  build:
    runs-on: ubuntu-latest
    services:
      database:
        image: postgres:alpine
        ports:
          - 5432:5432
        env:
          POSTGRES_DB: lynx
          POSTGRES_USER: node
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v2
      # fix version to 13 to support ES Modules
      - name: Use Node.js 13
        uses: actions/setup-node@v1
        with:
          node-version: 13

      - name: Restore Cache
        id: cache
        uses: actions/cache@v1
        with:
          path: node_modules
          key: ${{ runner.os }}-node-13-${{ hashFiles('**/package-lock.json') }}
          restore-keys: ${{ runner.os }}-node-13-
      - name: Install Dependencies
        run: npm i --no-package-lock --no-fund --no-audit
        if: steps.cache.outputs.cache-hit != 'true'

      - name: Lint
        run: npm run lint

      - name: Test
        run: npm test
      - name: Archive Test Results
        # if: failure()
        uses: actions/upload-artifact@v1
        with:
          name: Test Report
          path: junit.xml

      - name: Upload Coverage
        uses: codecov/codecov-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
        if: github.ref == 'refs/heads/master'
