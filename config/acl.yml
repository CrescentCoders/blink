user:
  grants:
    # "create" action is not in here since you don't "create" a user manually.
    # You just sign in with Slack.

    # Everyone in a team can see each other
    - resource: User
      action: read
    # A user can update only itself, but not the id nor the role
    - resource: User
      action: update
      attributes:
        - '*'
        - '!id'
        - '!role'
      condition: &is-self
        Fn: EQUALS
        args:
          id: $.req.user.id
    # A user can delete only itself, with explicit confirmation
    - resource: User
      action: delete
      condition:
        Fn: AND
        args:
          - *is-self
          - Fn: EQUALS
            args:
              true: $.req.body.confirm

    # Everyone can read each other's links
    - resource: Link
      action: read
    # Anyone can create a link - the specific conditions are handled by the model
    # since we do URL normalization AFTER the query has been built
    - resource: Link
      action: create
    # You can only update a link when it's yours, and even then only to add a manual hash.
    - resource: Link
      action: update
      attributes:
        - hash
      condition:
        Fn: AND
        args:
          - Fn: EQUALS
            args:
              hash: $.undefined
          - Fn: EQUALS
            args:
              creatorId: $.req.user.id

admin:
  extends:
    role: user
  grants:
    # An admin can promote a user
    - resource: User
      action: update
      attributes:
        - role
      condition: &is-user
        Fn: EQUALS
        args:
          role: user
    # An admin can 'delete' a user
    - resource: User
      action: delete
      condition: *is-user

owner:
  extends:
    role: admin
  grants:
    # The owner can promote/demote any user
    - resource: User
      action: update
      attributes:
        - role
    # The owner can delete admins
    - resource: User
      action: delete
