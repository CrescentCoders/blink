user:
  grants:
    # create/delete action is not in here since you don't "create" a user manually,
    # and "deleting" a user involves just updating the 'deleted' property.

    # Everyone in a team can see each other
    - resource: User
      action: read
    # A user can update only itself, but not some fields
    - resource: User
      action: update
      attributes:
        - '*'
        - '!id'
        - '!role'
        - '!deleted'
      condition: &is-self
        Fn: EQUALS
        args:
          id: $.req.user.id
    # A user can delete only itself, with explicit confirmation
    - resource: User
      action: delete
      condition:
        Fn: AND
        args:
          - *is-self
          - &not-deleted
            Fn: EQUALS
            args:
              deleted: false
          - &confirm
            Fn: EQUALS
            args:
              true: $.req.body.confirm

    # Everyone can read each other's links. Also, anyone can create a link -
    # the specific conditions are handled by the model,
    # since we do URL normalization AFTER the query has been built
    - resource: Link
      action:
        - read
        - create
    # You can only update a link when it's yours, and even then only to add a manual hash.
    - resource: Link
      action: update
      attributes:
        - hash
        - meta
      condition:
        Fn: AND
        args:
          - Fn: EQUALS
            args:
              hash: $.undefined
          - Fn: EQUALS
            args:
              creatorId: $.req.user.id

admin:
  extends:
    role: user
  grants:
    # An admin can promote a user to admin, or recuse itself
    - resource: User
      action: update
      attributes:
        - role
      condition:
        Fn: OR
        args:
          - Fn: AND
            args:
              - *is-self
              - Fn: EQUALS
                args:
                  id: $.req.user.id
          - Fn: AND
            args:
              - &is-user
                Fn: EQUALS
                args:
                  role: user
              - Fn: EQUALS
                args:
                  admin: $.req.body.role # the "admin" should be a passed context
    # An admin can 'delete' a user, and re-enable 'deleted' accounts
    - resource: User
      action: update
      attributes:
        - deleted
      condition:
        Fn: AND
        args:
          - *is-user
          - &require-confirmation-when-deleting
            Fn: OR
            args:
              - Fn: EQUALS
                args:
                  deleted: true
              - Fn: AND
                args:
                  - *not-deleted
                  - *confirm

    - resource: Link
      action: delete
      condition:
        Fn: EQUALS
        args: # TODO: not possible since can't do $.link.creator.role

owner:
  extends:
    role: admin
  grants:
    # The owner can promote/demote any user
    - resource: User
      action: update
      attributes:
        - role
    # The owner can delete/restore admins
    - resource: User
      action: update
      attributes:
        - deleted
      condition: *require-confirmation-when-deleting
    # Only an owner can delete a link
    - resource: Link
      action: delete
